{"ast":null,"code":"import { Employee } from '../employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateEmployeeComponent {\n  employeeService;\n  route;\n  router;\n  id;\n  employee = new Employee();\n  constructor(employeeService, route, router) {\n    this.employeeService = employeeService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe(data => {\n      this.goToEmployeeList();\n    }, error => console.log(error));\n  }\n  goToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n  static ɵfac = function UpdateEmployeeComponent_Factory(t) {\n    return new (t || UpdateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateEmployeeComponent,\n    selectors: [[\"app-update-employee\"]],\n    decls: 30,\n    vars: 6,\n    consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"name\", \"phoneNumber\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"position\", \"name\", \"position\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"department\", \"name\", \"department\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n    template: function UpdateEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \" Update Employee \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateEmployeeComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n        i0.ɵɵtext(6, \" First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.employee.firstName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n        i0.ɵɵtext(10, \" Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.employee.lastName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\");\n        i0.ɵɵtext(14, \" Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.employee.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\");\n        i0.ɵɵtext(18, \" Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.employee.phoneNumber = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\");\n        i0.ɵɵtext(22, \" Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.employee.position = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 2)(25, \"label\");\n        i0.ɵɵtext(26, \" Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_27_listener($event) {\n          return ctx.employee.department = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"button\", 9);\n        i0.ɵɵtext(29, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.firstName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.lastName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.phoneNumber);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.position);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.department);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Employee","UpdateEmployeeComponent","employeeService","route","router","id","employee","constructor","ngOnInit","snapshot","params","getEmployeeById","subscribe","data","error","console","log","onSubmit","updateEmployee","goToEmployeeList","navigate","i0","ɵɵdirectiveInject","i1","EmployeeService","i2","ActivatedRoute","Router","selectors","decls","vars","consts","template","UpdateEmployeeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdateEmployeeComponent_Template_form_ngSubmit_3_listener","UpdateEmployeeComponent_Template_input_ngModelChange_7_listener","$event","firstName","UpdateEmployeeComponent_Template_input_ngModelChange_11_listener","lastName","UpdateEmployeeComponent_Template_input_ngModelChange_15_listener","email","UpdateEmployeeComponent_Template_input_ngModelChange_19_listener","phoneNumber","UpdateEmployeeComponent_Template_input_ngModelChange_23_listener","position","UpdateEmployeeComponent_Template_input_ngModelChange_27_listener","department","ɵɵadvance","ɵɵproperty"],"sources":["/home/runner/Typescript-ASPNET-EmployeeManagementSystem/FrontEnd/src/app/update-employee/update-employee.component.ts","/home/runner/Typescript-ASPNET-EmployeeManagementSystem/FrontEnd/src/app/update-employee/update-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id!: number;\n  employee: Employee = new Employee();\n  constructor(private employeeService: EmployeeService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n\n  onSubmit(){\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe( data =>{\n      this.goToEmployeeList();\n    }\n    , error => console.log(error));\n  }\n\n  goToEmployeeList(){\n    this.router.navigate(['/employees']);\n  }\n}","\n<div class=\"col-md-6 offset-md-3\">\n    <h3> Update Employee </h3>\n    <form (ngSubmit) = \"onSubmit()\">\n    \n        <div class=\"form-group\">\n            <label> First Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"firstName\"\n                [(ngModel)] = \"employee.firstName\" name = \"firstName\">\n        </div>\n    \n        <div class=\"form-group\">\n            <label> Last Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"lastName\"\n                [(ngModel)] = \"employee.lastName\" name = \"lastName\">\n        </div>\n    \n        <div class=\"form-group\">\n            <label> Email</label>\n            <input type=\"text\" class =\"form-control\" id = \"email\"\n                [(ngModel)] = \"employee.email\" name = \"email\">\n        </div>\n\n        <div class=\"form-group\">\n            <label> Phone Number</label>\n            <input type=\"text\" class =\"form-control\" id = \"phoneNumber\"\n                [(ngModel)] = \"employee.phoneNumber\" name = \"phoneNumber\">\n        </div>\n\n        <div class=\"form-group\">\n            <label> Position</label>\n            <input type=\"text\" class =\"form-control\" id = \"position\"\n                [(ngModel)] = \"employee.position\" name = \"position\">\n        </div>\n\n        <div class=\"form-group\">\n            <label> Department</label>\n            <input type=\"text\" class =\"form-control\" id = \"department\"\n                [(ngModel)] = \"employee.department\" name = \"department\">\n        </div>\n    \n        <button class = \"btn btn-success\" type =\"submit\">Submit</button>\n    \n    </form>\n    </div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}