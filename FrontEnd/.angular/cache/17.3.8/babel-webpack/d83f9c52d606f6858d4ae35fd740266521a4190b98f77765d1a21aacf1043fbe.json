{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  httpClient;\n  baseURL = environment.baseURL;\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getEmployeesList() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createEmployee(employee) {\n    return this.httpClient.post(`${this.baseURL}`, employee);\n  }\n  getEmployeeById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  updateEmployee(id, employee) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, employee);\n  }\n  deleteEmployee(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n  static ɵfac = function EmployeeService_Factory(t) {\n    return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeService,\n    factory: EmployeeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","EmployeeService","httpClient","baseURL","constructor","getEmployeesList","get","createEmployee","employee","post","getEmployeeById","id","updateEmployee","put","deleteEmployee","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/workspaces/Typescript-ASP.NET--EmployeeManagementSystem/FrontEnd/src/app/employee.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Employee } from './employee';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private baseURL : string = environment.baseURL;\n\n  constructor(private httpClient : HttpClient) { }\n\n  getEmployeesList(): Observable<Employee[]>{\n    return this.httpClient.get<Employee[]>(`${this.baseURL}`);\n  }\n\n  createEmployee(employee : Employee): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`,employee);\n  }\n\n  getEmployeeById(id: number): Observable<Employee>{\n    return this.httpClient.get<Employee>(`${this.baseURL}/${id}`);\n  }\n\n  updateEmployee(id: number, employee: Employee): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`, employee);\n  }\n\n  deleteEmployee(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n\n}\n\n\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,eAAe;EAINC,UAAA;EAFZC,OAAO,GAAYH,WAAW,CAACG,OAAO;EAE9CC,YAAoBF,UAAuB;IAAvB,KAAAA,UAAU,GAAVA,UAAU;EAAiB;EAE/CG,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,OAAO,EAAE,CAAC;EAC3D;EAEAI,cAAcA,CAACC,QAAmB;IAChC,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,OAAO,EAAE,EAACK,QAAQ,CAAC;EACzD;EAEAE,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACT,UAAU,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,IAAIQ,EAAE,EAAE,CAAC;EAC/D;EAEAC,cAAcA,CAACD,EAAU,EAAEH,QAAkB;IAC3C,OAAO,IAAI,CAACN,UAAU,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,IAAIQ,EAAE,EAAE,EAAEH,QAAQ,CAAC;EAC/D;EAEAM,cAAcA,CAACH,EAAU;IACvB,OAAO,IAAI,CAACT,UAAU,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,IAAIQ,EAAE,EAAE,CAAC;EACxD;;qBAxBWV,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAflB,eAAe;IAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}